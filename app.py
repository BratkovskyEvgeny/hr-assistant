import time

import streamlit as st

from utils import (
    analyze_skills,
    calculate_similarity,
    extract_text_from_file,
    get_detailed_analysis,
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="HR Assistant - –û—Ü–µ–Ω–∫–∞ —Ä–µ–∑—é–º–µ",
    page_icon="üìù",
    layout="wide",
    initial_sidebar_state="collapsed",
)

# –°—Ç–∏–ª–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
st.markdown(
    """
    <style>
    /* –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç–∏–ª–∏ */
    .main {
        background-color: #1a1a1a;
        color: #ffd700;
        padding: 2rem;
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ */
    .container {
        background: linear-gradient(145deg, #2a2a2a, #1a1a1a);
        border: 1px solid #ffd700;
        border-radius: 15px;
        padding: 2rem;
        margin: 1rem 0;
        box-shadow: 0 4px 15px rgba(255, 215, 0, 0.1);
        transition: all 0.3s ease;
    }
    
    .container:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(255, 215, 0, 0.2);
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ */
    h1, h2, h3 {
        color: #ffd700;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ */
    .stButton>button {
        background: linear-gradient(145deg, #2a2a2a, #1a1a1a);
        color: #ffd700;
        border: 1px solid #ffd700;
        border-radius: 8px;
        padding: 0.5rem 1rem;
        transition: all 0.3s ease;
    }
    
    .stButton>button:hover {
        background: linear-gradient(145deg, #ffd700, #ffa500);
        color: #1a1a1a;
        transform: scale(1.05);
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –ø–æ–ª–µ–π */
    .stTextArea>div>div>textarea {
        background-color: #2a2a2a;
        color: #ffd700;
        border: 1px solid #ffd700;
        border-radius: 8px;
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞ */
    .stProgress .st-bo {
        background-color: #ffd700;
    }
    
    .stProgress .st-bp {
        background-color: #ffa500;
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –∞–ª–µ—Ä—Ç–æ–≤ */
    .stAlert {
        background: linear-gradient(145deg, #2a2a2a, #1a1a1a);
        border: 1px solid #ffd700;
        border-radius: 8px;
        color: #ffd700;
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –≤–∫–ª–∞–¥–æ–∫ */
    .stTabs [data-baseweb="tab-list"] {
        background-color: #1a1a1a;
        border: 1px solid #ffd700;
        border-radius: 8px;
    }
    
    .stTabs [data-baseweb="tab"] {
        color: #ffd700;
        transition: all 0.3s ease;
    }
    
    .stTabs [data-baseweb="tab"]:hover {
        background-color: #2a2a2a;
    }
    
    /* –ê–Ω–∏–º–∞—Ü–∏–∏ */
    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(20px); }
        to { opacity: 1; transform: translateY(0); }
    }
    
    .fade-in {
        animation: fadeIn 0.5s ease-out;
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –º–µ—Ç—Ä–∏–∫ */
    .stMetric {
        background: linear-gradient(145deg, #2a2a2a, #1a1a1a);
        border: 1px solid #ffd700;
        border-radius: 8px;
        padding: 1rem;
        transition: all 0.3s ease;
    }
    
    .stMetric:hover {
        transform: scale(1.05);
        box-shadow: 0 4px 15px rgba(255, 215, 0, 0.2);
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è —Å–ø–∏—Å–∫–æ–≤ */
    .skill-item {
        background: linear-gradient(145deg, #2a2a2a, #1a1a1a);
        border: 1px solid #ffd700;
        border-radius: 8px;
        padding: 0.8rem 1.2rem;
        margin: 0.5rem 0;
        transition: all 0.3s ease;
    }
    
    .skill-item:hover {
        transform: translateX(10px);
        background: linear-gradient(145deg, #ffd700, #ffa500);
        color: #1a1a1a;
    }
    </style>
""",
    unsafe_allow_html=True,
)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
st.markdown(
    """
    <div class='container fade-in' style='text-align: center;'>
        <h1 style='font-size: 3.5em; margin-bottom: 1rem;'>
            ü§ñ HR Assistant
        </h1>
        <p style='color: #ffd700; font-size: 1.4em;'>
            –û—Ü–µ–Ω–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ä–µ–∑—é–º–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –≤–∞–∫–∞–Ω—Å–∏–∏
        </p>
    </div>
""",
    unsafe_allow_html=True,
)

# –°–æ–∑–¥–∞–µ–º –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
col1, col2 = st.columns([1, 1])

with col1:
    # –°–µ–∫—Ü–∏—è –¥–ª—è –≤–≤–æ–¥–∞ –æ–ø–∏—Å–∞–Ω–∏—è –≤–∞–∫–∞–Ω—Å–∏–∏
    st.markdown(
        """
        <div class='container fade-in'>
            <h2 style='margin-bottom: 1.5rem;'>üìã –û–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏</h2>
        </div>
    """,
        unsafe_allow_html=True,
    )

    job_description = st.text_area(
        "–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏",
        height=200,
        help="–û–ø–∏—à–∏—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –≤–∞–∫–∞–Ω—Å–∏–∏, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –Ω–∞–≤—ã–∫–∏ –∏ –æ–ø—ã—Ç",
    )

with col2:
    # –°–µ–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∑—é–º–µ
    st.markdown(
        """
        <div class='container fade-in'>
            <h2 style='margin-bottom: 1.5rem;'>üìÑ –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∑—é–º–µ</h2>
        </div>
    """,
        unsafe_allow_html=True,
    )

    uploaded_file = st.file_uploader(
        "–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ä–µ–∑—é–º–µ (PDF –∏–ª–∏ DOCX)", type=["pdf", "docx"]
    )

if uploaded_file is not None and job_description:
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∞–Ω–∞–ª–∏–∑–∞
    with st.spinner("–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—é–º–µ..."):
        progress_bar = st.progress(0)
        for i in range(100):
            time.sleep(0.01)
            progress_bar.progress(i + 1)

        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ —Ä–µ–∑—é–º–µ
        resume_text = extract_text_from_file(uploaded_file)

        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
        similarity_score = calculate_similarity(job_description, resume_text)
        analysis_results = analyze_skills(job_description, resume_text)
        detailed_analysis = get_detailed_analysis(job_description, resume_text)

    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    st.markdown(
        """
        <div class='container fade-in'>
            <h2 style='margin-bottom: 1.5rem;'>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞</h2>
        </div>
    """,
        unsafe_allow_html=True,
    )

    # –°–æ–∑–¥–∞–µ–º –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    col1, col2 = st.columns(2)

    with col1:
        st.metric(
            "–ü—Ä–æ—Ü–µ–Ω—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è",
            f"{similarity_score:.1f}%",
            delta=f"{similarity_score - 50:.1f}%" if similarity_score > 50 else None,
        )

    with col2:
        if analysis_results["missing_skills"] or analysis_results["missing_experience"]:
            st.warning("–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è")
        else:
            st.success("–í—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç!")

    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –Ω–∞–≤—ã–∫–∏
    if analysis_results["missing_skills"]:
        st.markdown(
            """
            <div class='container fade-in'>
                <h3 style='margin-bottom: 1.5rem;'>üîç –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –Ω–∞–≤—ã–∫–∏</h3>
            </div>
        """,
            unsafe_allow_html=True,
        )

        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞–≤—ã–∫–∏ –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
        missing_skills = sorted(analysis_results["missing_skills"])
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –Ω–∞–≤—ã–∫–∏ –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞
        for skill in missing_skills:
            st.markdown(
                f"""
                <div class='skill-item fade-in'>
                    ‚Ä¢ {skill}
                </div>
            """,
                unsafe_allow_html=True,
            )

    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–π –æ–ø—ã—Ç
    if analysis_results["missing_experience"]:
        st.markdown(
            """
            <div class='container fade-in'>
                <h3 style='margin-bottom: 1.5rem;'>‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–π –æ–ø—ã—Ç</h3>
            </div>
        """,
            unsafe_allow_html=True,
        )

        for exp in analysis_results["missing_experience"]:
            st.markdown(
                f"""
                <div class='skill-item fade-in'>
                    ‚Ä¢ {exp}
                </div>
            """,
                unsafe_allow_html=True,
            )

    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
    st.markdown(
        """
        <div class='container fade-in'>
            <h2 style='margin-bottom: 1.5rem;'>üìë –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑</h2>
        </div>
    """,
        unsafe_allow_html=True,
    )

    # –°–æ–∑–¥–∞–µ–º –≤–∫–ª–∞–¥–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–µ–∫—Ü–∏–π
    tabs = st.tabs(["–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã", "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", "–ù–∞–≤—ã–∫–∏"])

    section_mapping = {
        "–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã": "experience",
        "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ": "education",
        "–ù–∞–≤—ã–∫–∏": "skills",
    }

    for tab, section in zip(tabs, section_mapping.keys()):
        with tab:
            if section_mapping[section] in detailed_analysis:
                analysis = detailed_analysis[section_mapping[section]]
                st.metric("–†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å", f"{analysis['relevance']:.1f}%")
                st.text_area("–¢–µ–∫—Å—Ç", analysis["text"], height=150, disabled=True)
            else:
                st.info("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
